@use "sass:map";
@use "@angular/material" as mat;

@include mat.core();

// https://material.angular.io/guide/duplicate-theming-styles#disabling-duplication-warnings
mat.$theme-ignore-duplication-warnings: true;

$custom-primary-palette: (
    50: #e7ebf5,
    100: #c3cde7,
    200: #9badd7,
    300: #378dc6,
    400: #5274bb,
    500: #2d5bb0,
    600: #2553a7,
    700: #1a499b,
    800: #0f3f8e,
    900: #002e7a,
    contrast: (
        50: rgba(black, 0.87),
        100: rgba(black, 0.87),
        200: rgba(black, 0.87),
        300: rgba(black, 0.87),
        400: rgba(black, 0.87),
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
    ),
);

$primary-palette: mat.define-palette($custom-primary-palette, 400, 200, 800);
// $accent-palette: mat.define-palette(mat.$pink-palette, A200, A100, A400);
// $warn-palette: mat.define-palette(mat.$red-palette);

// Create your Sass color vars (will be available in all the project)
$primary: mat.get-color-from-palette($primary-palette, 400);
// $accent: mat.get-color-from-palette($accent-palette, 500);
// $warn: mat.get-color-from-palette($warn-palette, 500);

$light-theme: mat.define-light-theme(
    (
        color: (
            primary: $primary-palette,
            accent: mat.define-palette(mat.$pink-palette),
        ),
    )
);

$dark-theme: mat.define-dark-theme(
    (
        color: (
            primary: $primary-palette,
            accent: mat.define-palette(mat.$blue-grey-palette),
        ),
        // Only include `typography` and `density` in the default dark theme.
        typography: mat.define-typography-config(),
        density: 0,
    )
);

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-color($light-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.all-component-themes($light-theme);

@media (prefers-color-scheme: dark) {
    // Use the `-color` mixins to only apply color styles without reapplying the same
    // typography and density styles.
    @include mat.core-theme($dark-theme);
    @include mat.all-component-themes($dark-theme);
}
